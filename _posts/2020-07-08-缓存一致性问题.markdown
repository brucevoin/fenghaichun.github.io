---
layout: post
title: "缓存一致性问题"
subtitle: ""
date: 2020-07-02
author: fenghaichun
category: 分布式理论
tags: 计算机
finished: true
---

## 1. 概述

这里说的一致性问题指的是数据库与缓存数据的一致性问题。

首先要明确，如果使用了缓存一定不能要求强一致性，否则代价太大，使用缓存一般都是追求最终一致性。

## 2. 基于redis过期时间

缓存设置过期时间，更新完数据库不用单独再更新缓存，由redis自动过期丢弃数据。在数据更新后，如果该数据恰好就在缓存里，那么从此刻开始到数据到达过期时间这段时间内，缓存与数据库是不一致的；而在数据过期后再经过查询缓存->查询数据库->放入缓存这样的流程更新缓存。

但是此方案最大的问题是如何设置过期时间，时间太大数据不一致的时间会更长，时间太小缓存频繁过期失效。



## 3. 基于REDIS过期+更新REDIS

在基于方案2的基础上，同步更新数据库、redis。如果数据库更新成功但是redis更新失败，则redis的过期时间会保证脏数据库能过期失效。

## 4. 基于redis+MQ

基于方案3的基础上，将更新redis的操作先写入消息队列，然后由相应的消费者消费消息并写入REDIS。

缺点：

依旧解决不了时序性问题，如果多台业务服务器分别处理针对同一行数据的两条请求，举个栗子，a = 1; a = 5;，如果mysql中是第一条先执行，而进入kafka的顺序是第二条先执行，那么数据就会产生不一致。

## 5. 基于redis+binlog

通过订阅binlog来更新redis，把我们搭建的消费服务，作为mysql的一个slave，订阅binlog，解析出更新内容，再更新到redis。

