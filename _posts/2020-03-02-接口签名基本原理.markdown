---
layout: post
title: "接口签名基本原理"
subtitle: ""
date: 2020-03-02
author: fenghaichun
category: computer
tags: 计算机
finished: true
---
# API接口参数签名
## 概述
在做系统集成或者系统需要调用外部接口获取数据的情况下，如果要做到较高的安全性要求，就必须考虑系统间通信过程的安全性。虽然使用https协议可以抵御大部分的安全风险，但是https仍人不能做到万无一失。支付宝、天猫、京东等大厂在设计接口时都采用了API接口参数签名的方式，来进一步确保接口调用的安全。

## 什么是API接口参数签名？
回想数字签名的原理，数字签名建立在非对称加密原理上，客户端采用某种hash算法计算数据的hash值（摘要/指纹），然后使用自己的私钥对hash值进行加密，再将数据发送给服务端，服务端使用客户端的公钥对加密后的hash进行解密，然后使用相同的hash算法计算数据的hash值，如果计算的hash值跟解密的hash值相等，说明数据没有被篡改且数据就是那个客户端发过来的。

接口参数的签名稍微又些不同，但原理大致相同，其主要目的是确保参数没有被篡改。

## 如何实现API接口参数签名？
大致过程：

1. 初始化过程

- 接口提供方给出接口对应的appid和appsecret（自己也要保存）；
- 接口调用方保存这两个参数（需要保密），这两个参数相当于对称密钥；

2. 接口调用过程

- 接口调用方将所有参数名称及值按照某种顺序排列成一个字符串，然后在字符串的首位加上appsecret得到新的字符串；
- 接口调用方使用某种hash算法计算新的字符串的hash值得到参数的签名；
- 接口调用方将请求参数、参数签名、appid发送给服务提供方；
- 服务提供方根据appid、自己保存的appsecret、请求参数，使用相同的hash算法计算参数的hash值，如果跟请求附带的hash值相等，说明请求参数没有被篡改，且请求方的身份是也ok的。

以上过程之所以是安全的是因为appsecret是仅仅通信双方知道的“秘密”，且这个“秘密”平时不会在网络上传递。

## 解决请求的唯一性
以上通过接口参数签名保证了接口参数的合法性以及调用方的身份，但是假如请求被拦截，然后攻击者利用拦截到的请求（不修改参数）重复调用接口，这不仅会导致数据泄露，还可能导致更加严重的业务问题。

所谓请求的唯一性就是指这个请求是唯一的，复制后再次请求无效。

要做到这点，通常是在请求参数签名中把当前请求的时间戳也加进去，即最终的参数签名是“hash(参数、appsecret、currentTime)”，当然，请求参数中也要加上currentTime。服务提供者收到请求后做两个验证，一个是请求参数签名的验证，一个请求发起时间与当前时间的时间差是否满足要求的验证，这个时间差门限表达的是在多久的时间内，这个请求允许重复发送，当然这个时间差不能太短，因为请求发起到服务提供者接收到请求之间是有个时间差的。



